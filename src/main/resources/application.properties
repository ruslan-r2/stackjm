spring.profiles.active=dev
#Добавить в environment variables или заменить своими значениями -> DB_BASE=jdbc:postgresql;DB_SERVER=localhost;DB_PORT=5432;DB_NAME=stack_jm;DB_USERNAME=postgres;DB_PASS=root

#local or default раскомментировать строки 5,6,7, при необходимости заменить своими значениями
#spring.datasource.url=jdbc:postgresql://localhost:5432/stack_jm?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.username=postgres
#spring.datasource.password=root

#Hibernate
spring.jpa.show-sql=true
spring.flyway.baseline-on-migrate=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

#JWT
app.jwtExpirationMs=86400000
#Swagger
application-description=Stack JM backJava project
application-version =1.0

#Данные для отправки ссылки, подтверждающей почту:
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ivanivanovdeveloper1@gmail.com
spring.mail.password=D79M8KArsqYKTW5
sender.name=JM
host=localhost:8080/
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
#Количество минут действия ссылки:
EXPIRATION_TIME_IN_MINUTES=1

#Oauth2
defaultOauthPass=stackJM
#GitHub
spring.security.oauth2.client.registration.github.client-id=6f73ed5d717e2f5c9bc2
spring.security.oauth2.client.registration.github.client-secret=38012a228883216e7f5fe4816353357c8ff8d1b9

#Google
spring.security.oauth2.client.registration.google.client-id=864995676276-lpnvqg6js35qoettec54d19ckvfqipsu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=l8dDAqisj2Ub5piioagBkWlo
spring.security.oauth2.client.registration.google.scope=openid,profile,email

#VK
spring.security.oauth2.client.registration.vk.client-id=7944882
spring.security.oauth2.client.registration.vk.client-secret=1b8nhdn9hSO7nMkeUU3Y
spring.security.oauth2.client.registration.vk.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.vk.client-authentication-method=post
spring.security.oauth2.client.registration.vk.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.vk.scope=email

spring.security.oauth2.client.provider.vk.authorization-uri=https://oauth.vk.com/authorize?revoke=1
spring.security.oauth2.client.provider.vk.token-uri=https://oauth.vk.com/access_token
spring.security.oauth2.client.provider.vk.user-info-uri=https://api.vk.com/method/users.get?v=5.52&fields=photo_max
spring.security.oauth2.client.provider.vk.user-name-attribute=first_name